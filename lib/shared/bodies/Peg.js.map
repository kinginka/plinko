{"version":3,"sources":["../../../src/shared/bodies/Peg.js"],"names":["PIXI","window","require","Peg","x","y","type","createPhysics","createSprite","options","friction","PEG_FRICTION","restitution","PEG_RESTITUTION","body","Bodies","circle","PEG_RADIUS","isStatic","position","label","isShrinking","sprite","Graphics","beginFill","PEG_COLOR","drawCircle","endFill","world","World","add","stage","addChild"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,aAAJ;;AAEA,IAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9BD,SAAOE,QAAQ,SAAR,CAAP;AACD;;IAEoBC,G;AACnB,qBAAsB;AAAA,QAARC,CAAQ,QAARA,CAAQ;AAAA,QAALC,CAAK,QAALA,CAAK;;AAAA;;AACpB,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,IAAL,GAAY,KAAZ;;AAEA,SAAKC,aAAL;AACA,SAAKC,YAAL;AACD;;;;oCAEe;AACd,UAAIC,UAAU;AACZC,kBAAUC,oBADE;AAEZC,qBAAaC;AAFD,OAAd;;AAKA,WAAKC,IAAL,GAAYC,iBAAOC,MAAP,CAAc,KAAKZ,CAAnB,EAAsB,KAAKC,CAA3B,EAA8BY,kBAA9B,EAA0CR,OAA1C,CAAZ;AACA,WAAKK,IAAL,CAAUI,QAAV,GAAqB,IAArB;AACA,WAAKJ,IAAL,CAAUK,QAAV,CAAmBf,CAAnB,GAAuB,KAAKA,CAA5B;AACA,WAAKU,IAAL,CAAUK,QAAV,CAAmBd,CAAnB,GAAuB,KAAKA,CAA5B;AACA,WAAKS,IAAL,CAAUM,KAAV,GAAkB,KAAKd,IAAvB;AACA,WAAKQ,IAAL,CAAUO,WAAV,GAAwB,KAAxB;AACD;;;mCAEc;AACb,WAAKC,MAAL,GAAc,IAAItB,KAAKuB,QAAT,EAAd;AACA,WAAKD,MAAL,CAAYE,SAAZ,CAAsBC,iBAAtB;AACA,WAAKH,MAAL,CAAYI,UAAZ,CAAuB,KAAKtB,CAA5B,EAA+B,KAAKC,CAApC,EAAuCY,kBAAvC;AACA,WAAKK,MAAL,CAAYK,OAAZ;AACD;;;gCAEWC,K,EAAO;AACjBC,sBAAMC,GAAN,CAAUF,KAAV,EAAiB,KAAKd,IAAtB;AACD;;;kCAEaiB,K,EAAO;AACnBA,YAAMC,QAAN,CAAe,KAAKV,MAApB;AACD;;;;;;kBArCkBnB,G","file":"Peg.js","sourcesContent":["import { Bodies, World } from 'matter-js';\nimport { PEG_FRICTION, PEG_RESTITUTION, PEG_RADIUS } from '../constants/bodies';\nimport { PEG_COLOR } from '../constants/colors';\n\nlet PIXI;\n\nif (typeof window === 'object') {\n  PIXI = require('pixi.js');\n}\n\nexport default class Peg {\n  constructor({ x, y }) {\n    this.x = x;\n    this.y = y;\n    this.type = 'peg';\n\n    this.createPhysics();\n    this.createSprite();\n  }\n\n  createPhysics() {\n    let options = {\n      friction: PEG_FRICTION,\n      restitution: PEG_RESTITUTION,\n    }\n\n    this.body = Bodies.circle(this.x, this.y, PEG_RADIUS, options);\n    this.body.isStatic = true;\n    this.body.position.x = this.x;\n    this.body.position.y = this.y;\n    this.body.label = this.type;\n    this.body.isShrinking = false;\n  }\n\n  createSprite() {\n    this.sprite = new PIXI.Graphics();\n    this.sprite.beginFill(PEG_COLOR);\n    this.sprite.drawCircle(this.x, this.y, PEG_RADIUS);\n    this.sprite.endFill();\n  }\n\n  addToEngine(world) {\n    World.add(world, this.body);\n  }\n\n  addToRenderer(stage) {\n    stage.addChild(this.sprite);\n  }\n}\n"]}