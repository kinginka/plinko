{"version":3,"sources":["../../../src/shared/bodies/Wall.js"],"names":["PIXI","window","require","Wall","x","y","width","height","createPhysics","createSprite","options","restitution","WALL_RESTITUTION","friction","WALL_FRICTION","body","Bodies","rectangle","isStatic","position","label","type","sprite","Graphics","beginFill","WALL_COLOR","drawRect","endFill","stage","addChild","world","World","add","VerticalWall","HorizontalWall","BucketWall","CANVAS_HEIGHT"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAIA,aAAJ;;AAEA,IAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9BD,SAAOE,QAAQ,SAAR,CAAP;AACD;;IAEKC,I;AACJ,sBAAqC;AAAA,QAAvBC,CAAuB,QAAvBA,CAAuB;AAAA,QAApBC,CAAoB,QAApBA,CAAoB;AAAA,QAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,QAAVC,MAAU,QAAVA,MAAU;;AAAA;;AACnC,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,CAAmB,EAAEF,YAAF,EAASC,cAAT,EAAnB;AACA,QAAI,QAAON,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAAE,WAAKQ,YAAL;AAAqB;AACxD;;;;yCAE8B;AAAA,UAAhBH,KAAgB,SAAhBA,KAAgB;AAAA,UAATC,MAAS,SAATA,MAAS;;AAC7B,UAAIG,UAAU;AACZC,qBAAaC,wBADD;AAEZC,kBAAUC;AAFE,OAAd;;AAKA,WAAKC,IAAL,GAAYC,iBAAOC,SAAP,CAAiB,KAAKb,CAAtB,EAAyB,KAAKC,CAA9B,EAAiC,KAAKC,KAAtC,EAA6C,KAAKC,MAAlD,EAA0DG,OAA1D,CAAZ;AACA,WAAKK,IAAL,CAAUG,QAAV,GAAqB,IAArB;AACA,WAAKH,IAAL,CAAUI,QAAV,CAAmBf,CAAnB,GAAuB,KAAKA,CAA5B;AACA,WAAKW,IAAL,CAAUI,QAAV,CAAmBd,CAAnB,GAAuB,KAAKA,CAA5B;AACA,WAAKU,IAAL,CAAUK,KAAV,GAAkB,KAAKC,IAAvB;AACD;;;mCAEc;AACb,WAAKC,MAAL,GAAc,IAAItB,KAAKuB,QAAT,EAAd;AACA,WAAKD,MAAL,CAAYE,SAAZ,CAAsBC,kBAAtB;AACA,WAAKH,MAAL,CAAYI,QAAZ,CAAqB,KAAKtB,CAA1B,EAA6B,KAAKC,CAAlC,EAAqC,KAAKC,KAA1C,EAAiD,KAAKC,MAAtD;AACA,WAAKe,MAAL,CAAYK,OAAZ;AACD;;;kCAEaC,K,EAAO;AACnBA,YAAMC,QAAN,CAAe,KAAKP,MAApB;AACD;;;gCAEWQ,K,EAAO;AACjBC,sBAAMC,GAAN,CAAUF,KAAV,EAAiB,KAAKf,IAAtB;AACD;;;;;;IAGUkB,Y,WAAAA,Y;;;AACX,+BAAoB;AAAA,QAAP7B,CAAO,SAAPA,CAAO;AAAA,QAAJC,CAAI,SAAJA,CAAI;;AAAA;;AAAA,uHACZ,EAACD,IAAD,EAAIC,IAAJ,EAAOC,OAAO,CAAd,EAAiBC,QAAQ,GAAzB,EADY;AAEnB;;;EAH+BJ,I;;IAMrB+B,c,WAAAA,c;;;AACX,4BAAc;AAAA;;AAAA,2HACN,EAAE9B,GAAG,CAAL;AACEC,SAAG,GADL;AAEEC,aAAO,GAFT;AAGEC,cAAQ;AAHV,KADM;AAMb;;;EAPiCJ,I;;IAUvBgC,U,WAAAA,U;;;AACX,6BAAmB;AAAA,QAAL/B,CAAK,SAALA,CAAK;;AAAA;;AAAA,mHACX,EAAEA,IAAF,EAAKC,GAAG+B,wBAAgB,GAAxB,EAA6B9B,OAAO,CAApC,EAAuCC,QAAQ,GAA/C,EADW;AAElB;;;EAH6BJ,I","file":"Wall.js","sourcesContent":["import { Bodies, World } from 'matter-js';\nimport { WALL_FRICTION, WALL_RESTITUTION} from '../constants/bodies';\nimport { WALL_COLOR } from '../constants/colors';\nimport { CANVAS_HEIGHT } from '../constants/canvas';\n\nlet PIXI;\n\nif (typeof window === 'object') {\n  PIXI = require('pixi.js');\n}\n\nclass Wall {\n  constructor({ x, y, width, height }) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.createPhysics({ width, height });\n    if (typeof window === 'object') { this.createSprite() };\n  }\n\n  createPhysics({width, height}) {\n    let options = {\n      restitution: WALL_RESTITUTION,\n      friction: WALL_FRICTION,\n    }\n\n    this.body = Bodies.rectangle(this.x, this.y, this.width, this.height, options);\n    this.body.isStatic = true;\n    this.body.position.x = this.x;\n    this.body.position.y = this.y;\n    this.body.label = this.type;\n  }\n\n  createSprite() {\n    this.sprite = new PIXI.Graphics()\n    this.sprite.beginFill(WALL_COLOR);\n    this.sprite.drawRect(this.x, this.y, this.width, this.height);\n    this.sprite.endFill();\n  }\n\n  addToRenderer(stage) {\n    stage.addChild(this.sprite);\n  }\n\n  addToEngine(world) {\n    World.add(world, this.body);\n  }\n}\n\nexport class VerticalWall extends Wall {\n  constructor({x, y}) {\n    super({x, y, width: 5, height: 500});\n  }\n}\n\nexport class HorizontalWall extends Wall {\n  constructor() {\n    super({ x: 0,\n            y: 590,\n            width: 800,\n            height: 10\n          })\n  }\n}\n\nexport class BucketWall extends Wall {\n  constructor({ x }) {\n    super({ x, y: CANVAS_HEIGHT - 100, width: 5, height: 100 });\n  }\n}\n"]}