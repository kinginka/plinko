{"version":3,"sources":["../../src/shared/setup.js"],"names":["createEnvironment","createWalls","stage","leftWall","VerticalWall","x","y","rightWall","ground","HorizontalWall","window","createWallSprites","createWallBodies","walls","forEach","wall","addToRenderer","addToEngine","engine","world","createBucketWalls","i","COLS","bucket","BucketWall","SPACING","createPegs","row","ROWS","col","rowPlacement","colPlacement","peg","Peg","sprite"],"mappings":";;;;;;;;kBA8CwBA,iB;;AA9CxB;;;;AACA;;AACA;;;;AACA;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,WAAW,IAAIC,kBAAJ,CAAiB,EAACC,GAAG,CAAJ,EAAOC,GAAG,GAAV,EAAjB,CAAjB;AACA,MAAMC,YAAY,IAAIH,kBAAJ,CAAiB,EAACC,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAjB,CAAlB;AACA,MAAME,SAAS,IAAIC,oBAAJ,EAAf;AACA,MAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAAEC,sBAAkBT,KAAlB,EAAyBC,QAAzB,EAAmCI,SAAnC,EAA8CC,MAA9C;AAAuD;AACzFI,mBAAiBT,QAAjB,EAA2BI,SAA3B,EAAsCC,MAAtC;AACD;;AAED,SAASG,iBAAT,CAA2BT,KAA3B,EAA4C;AAAA,oCAAPW,KAAO;AAAPA,SAAO;AAAA;;AAC1CA,QAAMC,OAAN,CAAc;AAAA,WAAQC,KAAKC,aAAL,CAAmBd,KAAnB,CAAR;AAAA,GAAd;AACD;;AAED,SAASU,gBAAT,GAAoC;AAAA,qCAAPC,KAAO;AAAPA,SAAO;AAAA;;AAClCA,QAAMC,OAAN,CAAc;AAAA,WAAQC,KAAKE,WAAL,CAAiBC,iBAAOC,KAAxB,CAAR;AAAA,GAAd;AACD;;AAED,SAASC,iBAAT,CAA2BlB,KAA3B,EAAkC;AAChC,OAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAIC,YAApB,EAA0BD,GAA1B,EAA+B;AAC7B,QAAIE,SAAS,IAAIC,gBAAJ,CAAe,EAAEnB,GAAGgB,IAAII,eAAT,EAAf,CAAb;;AAEA,QAAI,QAAOf,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAAEa,aAAOP,aAAP,CAAqBd,KAArB;AAA6B;AAC/DqB,WAAON,WAAP,CAAmBC,iBAAOC,KAA1B;AACD;AACF;;AAED,SAASO,UAAT,CAAoBxB,KAApB,EAA2B;AACzB,OAAK,IAAIyB,MAAM,CAAf,EAAkBA,MAAMC,YAAxB,EAA8BD,KAA9B,EAAqC;AACnC,SAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAMP,eAAO,CAA/B,EAAkCO,KAAlC,EAAyC;AACvC,UAAIC,eAAeD,MAAMJ,eAAzB;AACA,UAAIM,eAAeN,kBAAWE,MAAMF,eAApC;AACA,UAAIE,MAAM,CAAN,KAAY,CAAhB,EAAmB;AACjBG,wBAAgBL,kBAAU,CAA1B;AACD;;AAED,UAAIO,MAAM,IAAIC,aAAJ,CAAQ,EAAE5B,GAAGyB,YAAL,EAAmBxB,GAAGyB,YAAtB,EAAR,CAAV;AACAC,UAAIf,WAAJ,CAAgBC,iBAAOC,KAAvB;AACA,UAAIa,IAAIE,MAAR,EAAgB;AAAEF,YAAIhB,aAAJ,CAAkBd,KAAlB;AAA0B;AAC7C;AACF;AACF;;AAEc,SAASF,iBAAT,CAA2BE,KAA3B,EAAkC;AAC/CD,cAAYC,KAAZ;AACAkB,oBAAkBlB,KAAlB;AACAwB,aAAWxB,KAAX;AACD","file":"setup.js","sourcesContent":["import Peg from './bodies/Peg';\nimport { VerticalWall, HorizontalWall, BucketWall } from './bodies/Wall';\nimport engine from '../client/engine';\nimport { ROWS, COLS, SPACING, CANVAS_WIDTH, CANVAS_HEIGHT } from './constants/canvas';\n\nfunction createWalls(stage) {\n  const leftWall = new VerticalWall({x: 0, y: 100});\n  const rightWall = new VerticalWall({x: 795, y: 100});\n  const ground = new HorizontalWall();\n  if (typeof window === 'object') { createWallSprites(stage, leftWall, rightWall, ground) }\n  createWallBodies(leftWall, rightWall, ground);\n}\n\nfunction createWallSprites(stage, ...walls) {\n  walls.forEach(wall => wall.addToRenderer(stage));\n}\n\nfunction createWallBodies(...walls) {\n  walls.forEach(wall => wall.addToEngine(engine.world));\n}\n\nfunction createBucketWalls(stage) {\n  for (let i = 1; i < COLS; i++) {\n    let bucket = new BucketWall({ x: i * SPACING });\n\n    if (typeof window === 'object') { bucket.addToRenderer(stage) }\n    bucket.addToEngine(engine.world);\n  }\n}\n\nfunction createPegs(stage) {\n  for (let row = 0; row < ROWS; row++) {\n    for (let col = 0; col < COLS + 1; col++) {\n      let rowPlacement = col * SPACING;\n      let colPlacement = SPACING + (row * SPACING);\n      if (row % 2 === 0) {\n        rowPlacement += SPACING / 2;\n      }\n\n      let peg = new Peg({ x: rowPlacement, y: colPlacement });\n      peg.addToEngine(engine.world);\n      if (peg.sprite) { peg.addToRenderer(stage) };\n    }\n  }\n}\n\nexport default function createEnvironment(stage) {\n  createWalls(stage);\n  createBucketWalls(stage);\n  createPegs(stage);\n}\n"]}