{"version":3,"sources":["../../src/client/client.js"],"names":["document","querySelector","addEventListener","e","preventDefault","chip","Chip","x","offsetX","y","offsetY","addToEngine","engine","world","addToRenderer","stage","registerUpdateListener","renderer","render","Events","on","event","pairs","i","length","pair","console","log","bodyA","sprite","tint","bodyB","label","gameLoop","GameLoop","start"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACAA,SAASC,aAAT,CAAuB,QAAvB,EAAiCC,gBAAjC,CAAkD,OAAlD,EAA2D,UAACC,CAAD,EAAO;AAChEA,IAAEC,cAAF;;AAEA,MAAMC,OAAO,IAAIC,cAAJ,CAAS,EAAEC,GAAGJ,EAAEK,OAAP,EAAgBC,GAAGN,EAAEO,OAArB,EAAT,CAAb;;AAEAL,OAAKM,WAAL,CAAiBC,iBAAOC,KAAxB;AACAR,OAAKS,aAAL,CAAmBC,eAAnB;AACAV,OAAKW,sBAAL,CAA4BJ,gBAA5B;AACAK,qBAASC,MAAT,CAAgBH,eAAhB;AACD,CATD;;AAWA;AACAI,iBAAOC,EAAP,CAAUR,gBAAV,EAAkB,gBAAlB,EAAoC,UAASS,KAAT,EAAgB;AAClD,MAAMC,QAAQD,MAAMC,KAApB;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAAME,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIE,OAAOH,MAAMC,CAAN,CAAX;AACAG,YAAQC,GAAR,CAAYF,KAAKG,KAAL,CAAWC,MAAX,CAAkBC,IAA9B;AACAJ,YAAQC,GAAR,CAAYF,KAAKM,KAAL,CAAWF,MAAX,CAAkBC,IAA9B;;AAEA,QAAIL,KAAKG,KAAL,CAAWI,KAAX,KAAqB,KAAzB,EAAgC;AAC9BP,WAAKG,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,GAAyB,QAAzB;AACD,KAFD,MAEO,IAAIL,KAAKM,KAAL,CAAWC,KAAX,KAAqB,KAAzB,EAAgC;AACrCP,WAAKM,KAAL,CAAWF,MAAX,CAAkBC,IAAlB,GAAyB,QAAzB;AACD;;AAEDJ,YAAQC,GAAR,CAAYF,KAAKG,KAAL,CAAWC,MAAX,CAAkBC,IAA9B;AACAJ,YAAQC,GAAR,CAAYF,KAAKM,KAAL,CAAWF,MAAX,CAAkBC,IAA9B;AACD;AACF,CAjBD;;AAmBA,qBAAkBf,eAAlB;;AAEAE,mBAASC,MAAT,CAAgBH,eAAhB;;AAEA,IAAMkB,WAAW,IAAIC,kBAAJ,CAAa,EAAEtB,wBAAF,EAAUG,sBAAV,EAAiBE,4BAAjB,EAAb,CAAjB;AACAgB,SAASE,KAAT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"client.js","sourcesContent":["import { renderer, stage } from './renderer';\nimport Chip from '../shared/bodies/Chip';\nimport engine from './engine';\nimport GameLoop from './gameLoop';\nimport createEnvironment from '../shared/setup';\nimport { Events } from 'matter-js';\n\n// On click, add a chip at the mouse's x and y relative to canvas\ndocument.querySelector('canvas').addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const chip = new Chip({ x: e.offsetX, y: e.offsetY });\n\n  chip.addToEngine(engine.world);\n  chip.addToRenderer(stage);\n  chip.registerUpdateListener(engine);\n  renderer.render(stage);\n});\n\n// Collision Events\nEvents.on(engine, 'collisionStart', function(event) {\n  const pairs = event.pairs;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    console.log(pair.bodyA.sprite.tint)\n    console.log(pair.bodyB.sprite.tint)\n\n    if (pair.bodyA.label === 'peg') {\n      pair.bodyA.sprite.tint = 0xff0000;\n    } else if (pair.bodyB.label === 'peg') {\n      pair.bodyB.sprite.tint = 0xff0000;\n    }\n\n    console.log(pair.bodyA.sprite.tint)\n    console.log(pair.bodyB.sprite.tint)\n  }\n});\n\ncreateEnvironment(stage);\n\nrenderer.render(stage);\n\nconst gameLoop = new GameLoop({ engine, stage, renderer });\ngameLoop.start();\n\n// // When the client moves the mouse, display a chip overlay\n// document.querySelector('canvas').addEventListener('mousemove', (e) => {\n//   const x = e.offsetX;\n//   const y = e.offsetY;\n//\n//   const chip = new Chip({ x, y });\n//   chip.addToRenderer(stage);\n//   renderer.render(stage)\n// })\n"]}